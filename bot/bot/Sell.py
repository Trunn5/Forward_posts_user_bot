import asyncio

from pyrogram import filters, Client
from pyrogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

from bot.bot.Start import start
from bot.bot.fsm import fsm, fsm_filter
from bot.bot.to_admin import to_admin
from bot.utils.loader import bot, clientManager
from db.connection import session, SellChannelForward


@bot.on_message(filters.regex("üí∞–ü—Ä–æ–¥–∞–∂–∞"))
async def sell(client: Client, message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–¥–∞–∂–∞"""
    k = ReplyKeyboardMarkup(keyboard =
                            [[KeyboardButton("‚ûï–î–æ–±–∞–≤–∏—Ç—å"),
                              KeyboardButton("‚ûñ–£–¥–∞–ª–∏—Ç—å"),
                              KeyboardButton("‚úèÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å")]])
    fsm[message.from_user.id] = "sell"
    text = "–ö–∞–Ω–∞–ª—ã –ø—Ä–æ–¥–∞–∂–∏:\n"
    for chn in session.query(SellChannelForward).all():
        try:
            ch_id = int(chn.id.split('_')[0])
            text += f"{chn.id}: " + (await clientManager.clients[0].get_chat(ch_id)).title + \
                    f" - {chn.get_interval} —Å." + '\n'
            await asyncio.sleep(0.11)
        except Exception as e:
            await to_admin(f"–û–®–ò–ë–ö–ê: –ù–µ –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —á–∞—Ç–µ {chn}: {e}")
    await message.reply(text, reply_markup=k)


@bot.on_message(filters.regex("‚ûï–î–æ–±–∞–≤–∏—Ç—å") & fsm_filter("sell"))
async def sell_add(client: Client, message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –ø—Ä–æ–¥–∞–∂."""
    fsm[message.from_user.id] += "_add"
    await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ id –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø–µ—Ä–µ—Å—Å—ã–ª–∫–∏ –ø—Ä–æ–¥–∞–∂.")


@bot.on_message(filters.text & fsm_filter("sell_add"))
async def sell_adding(client: Client, message: Message):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–¥–∞ –ø—Ä–æ–¥–∞–∂."""
    try:
        ch_id = message.text
        info = await clientManager.clients[0].get_chat(int(ch_id.split('_')[0]))
        session.add(SellChannelForward(id=ch_id))
        session.commit()
        fsm[message.from_user.id] = ''
        await message.reply(f"–ö–∞–Ω–∞–ª {info.title} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
        await start(client, message)
    except Exception as e:
        await message.reply(f"–û—à–∏–±–∫–∞! {e}")


@bot.on_message(filters.regex("‚ûñ–£–¥–∞–ª–∏—Ç—å") & fsm_filter("sell"))
async def sell_rm(client: Client, message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–¥–∞ –ø—Ä–æ–¥–∞–∂."""
    fsm[message.from_user.id] += "_rm"
    await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ id –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø–µ—Ä–µ—Å—Å—ã–ª–∫–∏ –ø—Ä–æ–¥–∞–∂.")


@bot.on_message(filters.text & fsm_filter("sell_rm"))
async def sell_rming(client: Client, message: Message):
    """–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∂ –∏–∑ —Å–ø–∏—Å–∫–∞."""
    try:
        ch_id = message.text
        ch = session.query(SellChannelForward).filter_by(id=ch_id).first()
        if ch is None:
            raise Exception(f"–ù–µ—Ç –∫–∞–Ω–∞–ª–∞ {ch_id} –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        session.delete(ch)
        session.commit()
        info = await clientManager.clients[0].get_chat(int(ch_id.split('_')[0]))
        fsm[message.from_user.id] = ''
        await message.reply(f"–ö–∞–Ω–∞–ª {info.title} —É—Å–ø–µ—à–Ω–æ –£–î–ê–õ–ï–ù.")
        await start(client, message)
    except Exception as e:
        await message.reply(f"–û—à–∏–±–∫–∞!: {e}")


@bot.on_message(filters.regex("‚úèÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å") & fsm_filter("sell"))
async def sell_change(client: Client, message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–∏—Ç—å"""
    fsm[message.from_user.id] += '_change'
    await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–π–¥–∏ —á–∞—Ç–∞ –∏ –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö), –Ω–∞–ø—Ä–∏–º–µ—Ä:\n"
                        "-100123123 60")


@bot.on_message(filters.text & fsm_filter("sell_change"))
async def sell_changing(client: Client, message: Message):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —É —á–∞—Ç–∞"""
    try:
        chat_id, interval = message.text.split()
        ch_id = session.query(SellChannelForward).filter_by(id=chat_id).first()
        ch_id.interval = int(interval)
        session.commit()
        fsm[message.from_user.id] = ''
        await message.reply(f"—É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {interval}!")
        await sell(client, message)
    except Exception as e:
        await message.reply("–û—à–∏–±–∫–∞!\ne")
