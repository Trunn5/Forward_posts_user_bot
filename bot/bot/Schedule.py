from pyrogram import filters, Client
from pyrogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

from bot.bot import start
from bot.bot.fsm import fsm, fsm_filter
from bot.utils.loader import bot_client, scheduler
from bot.utils.sending import sending
from bot.utils.utils import is_valid_time_format


@bot_client.on_message(filters.regex("üóì–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"))
async def schedule(client: Client, message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–ø–æ–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ,
    –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ,
    –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å."""
    k = ReplyKeyboardMarkup(keyboard =[
                            [KeyboardButton("‚ûï–î–æ–±–∞–≤–∏—Ç—å")],
                             [KeyboardButton("‚ûñ–£–¥–∞–ª–∏—Ç—å")],
                             [KeyboardButton("üîô–ù–∞–∑–∞–¥")]
                              ],
                            resize_keyboard=True)
    fsm[message.from_user.id] = "schedule"
    text = "–¢–µ–∫—É—â–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤:\n" + '\n'.join([time for _, time, _ in scheduler.tasks])
    if len(scheduler.tasks) == 0: text += "–ü—É—Å—Ç–æ"
    await message.reply(text, reply_markup=k)


@bot_client.on_message(filters.regex("‚ûï–î–æ–±–∞–≤–∏—Ç—å") & fsm_filter("schedule"))
async def schedule_add(client: Client, message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"""
    fsm[message.from_user.id] += "_add"
    await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤—Ä–µ–º—è (hh:mm).")


@bot_client.on_message(filters.text & fsm_filter("schedule_add"))
async def schedule_adding(client: Client, message: Message):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–µ—Å—Å—ã–ª–∫–∏"""
    time = message.text
    if not is_valid_time_format(time):
        await message.reply("–í–≤–µ–¥–∏—Ç–µ HH:MM")
        return
    fsm[message.from_user.id] = ''
    await scheduler.add_task(task=sending, run_time=time)
    await message.reply(f"–í—Ä–µ–º—è {time} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.")
    await start(client, message)


@bot_client.on_message(filters.regex("‚ûñ–£–¥–∞–ª–∏—Ç—å") & fsm_filter("schedule"))
async def schedule_rm(client: Client, message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    fsm[message.from_user.id] += "_rm"
    await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤—Ä–µ–º—è (hh:mm).")


@bot_client.on_message(filters.text & fsm_filter("schedule_rm"))
async def schedule_rming(client: Client, message: Message):
    """–£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    time = message.text
    if not is_valid_time_format(time):
        await message.reply("–í–≤–µ–¥–∏—Ç–µ HH:MM")
        return
    if await scheduler.remove_task(sending, time):
        await message.reply(f"–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –≤—Ä–µ–º—è {time}")
    fsm[message.from_user.id] = ''
    await start()