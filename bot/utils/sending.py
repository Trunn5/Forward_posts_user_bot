import asyncio

from pyrogram.errors import SlowmodeWait, ChatWriteForbidden, FloodWait
from pyrogram.types import InputMediaPhoto

from bot import config
from bot.bot.to_admin import to_admin
from bot.utils.utils import Album, DailyAlbums, check_stop_sign
from bot.scheduler.get_old_albums import get_old_albums
from bot.utils.loader import clientManager, bot

from db.connection import session, RentChannelForward, DefaultSpamValue, SellChannelForward, RentChannelSource, \
    SellChannelSource, Admin


async def sending():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.
    """
    await to_admin("–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞—Å—Å—ã–ª–∫–∞")
    await asyncio.gather(
        # –ü–†–û–î–ê–ñ–ê
        forwards_to_chats(int(session.query(RentChannelSource).first().id),
                            session.query(RentChannelForward).all(),
                            6,),
        # –ê–†–ï–ù–î–ê
        forwards_to_chats(int(session.query(SellChannelSource).first().id),
                            session.query(SellChannelForward).all(),
                            6, ))

async def forwards_to_chats(channel_id: int, groups: list[RentChannelForward | SellChannelForward], limit: int):
    """
    –ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç count –ø–æ—Å—Ç–æ–≤ –∏–∑ channel_id –≤ groups
    """
    if len(groups) == 0:
        return

    channel_from = (await clientManager.clients[0].get_chat(channel_id)).title

    text = f"–†–∞—Å—Å—ã–ª–∫–∞ –∏–∑ {channel_from} –≤:\n"

    for group in groups:
        text += f"{group.title}\n"

    await to_admin(text)

    daily_albums = DailyAlbums()

    # –°–±–æ—Ä —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    while True:
        try:
            messages = await get_old_albums(clientManager.clients[0], channel_id, limit, daily_albums.get_todays_albums())
            break
        except FloodWait as e:
            await to_admin(f"–°–ø–∞–º –ø—Ä–∏ —Å–±–æ—Ä–µ —Å–æ–æ–±—â–µ–Ω–∏–π, –∂–¥—É {e} —Å.")
            await asyncio.sleep(e.value+0.01)

    for album in messages:
        # –ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º
        media = [InputMediaPhoto(media=album.photos[0], caption=album.caption)]
        # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
        media += [InputMediaPhoto(media=photo) for photo in album.photos[1:]]
        for admin in session.query(Admin).all():
            while True:
                try:
                    await bot.send_message(text="–≠—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –º–Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å:", chat_id=admin.id)
                    await bot.send_media_group(media=media, chat_id=admin.id)
                    await asyncio.sleep(2)
                    break
                except FloodWait as e:
                    await asyncio.sleep(e.value)

    # –û—Ç–º–µ—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –æ–Ω–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å–µ–≥–æ–¥–Ω—è
    for message in messages:
        daily_albums += message.media_group_id

    default_delay_groups = [x.id for x in groups if x.interval is None]
    unique_delay_groups = [x for x in groups if x.interval is not None]

    default_spam_interval = session.query(DefaultSpamValue).first().value
    #async def cycle():
      #  for i in range(min(limit, len(messages))):
     #       try:
    #            await forward_post(messages[i], default_delay_groups)
   #             await asyncio.sleep(default_spam_interval)
  #          except Exception as e:
 #               await to_admin(e)
#        await to_admin("–†–∞—Å—Å—ã–ª–∫–∞ —Å –æ–±—ã—á–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –æ–∫–æ–Ω—á–µ–Ω–∞.")
    async def to_group(group, albums):
        for album in albums:
            await send_album(group, album)
            await asyncio.sleep(default_spam_interval)

    await asyncio.gather(*[to_group(group, messages[:limit]) for group in default_delay_groups])


async def send_album(chat_id: str | int, album: Album, user_bot_id: int = -1):
    """
    –ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –∞–ª—å–±–æ–º –≤ —á–∞—Ç.
    """
    # –ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º
    media = [InputMediaPhoto(media=album.photos[0], caption=album.caption)]
    # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
    media += [InputMediaPhoto(media=photo) for photo in album.photos[1:]]

    # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∞–π–¥–∏ –≤–∏–¥–∞ -100123123_123123.
    chat_id, reply_id = map(int, str(chat_id).split('_')) if '_' in chat_id else (chat_id, None)

    await to_admin(f"–û—Ç–ø—Ä–∞–≤–ª—è—é –∞–ª—å–±–æ–º –≤ —á–∞—Ç {chat_id}, {reply_id}.\n{album.caption[:30]}...")

    # –ï—Å–ª–∏ –º—ã –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –±–æ—Ç–æ–≤ –∏ –¥–æ—à–ª–∏ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ, –∑–Ω–∞—á–∏—Ç –Ω–∏ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö
    # –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ => –∑–∞–≤–µ—Ä—à–∞–µ–º
    if user_bot_id >= len(clientManager.clients):
        return

    if user_bot_id == -1:  # –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –±–æ—Ç–æ–≤, —Ç–æ –±–µ—Ä–µ–º —Ä–∞–±–æ—á–µ–≥–æ.
        client = clientManager.get_worker()
    else:                  # –ò–Ω–∞—á–µ –±–µ—Ä–µ–º –ø–æ —Å–ø–∏—Å–∫—É.
        client = clientManager.clients[user_bot_id]
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–ª—å–±–æ–º.
        await client.send_media_group(chat_id=int(chat_id), reply_to_message_id=reply_id, media=media)
    # –û—à–∏–±–∫–∞ —Å–ø–∞–º–∞
    except FloodWait as e:
        await to_admin(f"–°–ø–∞–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –∂–¥—É {e.value} —Å.")
        await asyncio.sleep(e.value)
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º –∂–µ –±–æ—Ç–æ–º.
        await client.send_media_group(chat_id=int(chat_id), reply_to_message_id=reply_id, media=media)
    # –û—à–∏–±–∫–∞ –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –æ—Ç—Ä–ø–∞–≤–∫–∏ –≤ —á–∞—Ç–µ
    except SlowmodeWait as e:
        await to_admin(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –º–µ–¥–ª–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ.\n"
                       f"–ü–æ–ø—ã—Ç–∫–∞ —Å –¥—Ä—É–≥–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º...")
        await send_album(chat_id, album)
    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ (–±–∞–Ω, ...)
    except Exception as e:
        await to_admin(f"‚õîÔ∏è<b>–û—à–∏–±–∫–∞:</b> {(await client.get_me()).username} –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–µ.\nüí¨–ß–∞—Ç: {chat_id}\n–¢–∏–ø: {e}\n"
                       f"–ü–æ–ø—ã—Ç–∫–∞ —Å –¥—Ä—É–≥–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º...")
        await send_album(chat_id, album, user_bot_id+1)


async def forward_post(album: Album, groups: list[int | str]):
    # === –°–¢–û–ü –ó–ù–ê–ö ===
    if check_stop_sign(album.caption):
        return
    # ===============================
    for i, spam_group in enumerate(groups):
        try:
            await send_album(spam_group, album)
            await asyncio.sleep(0.1)
        except Exception as e:
            await to_admin(e)


async def forwards_to_chats_unique(messages: list[Album], groups: list[RentChannelForward | SellChannelForward]):
    time = 0
    done = [0] * len(groups)
    while True:
        sent = False
        for i, group in enumerate(groups):
            if done[i] < len(messages):
                sent = True
            if time % group.get_interval == 0:
                await send_album(chat_id=group.id, album=messages[done[i]])
                done[i] += 1
                sent = True
        await asyncio.sleep(1)
        time += 1

        if not sent:
            break